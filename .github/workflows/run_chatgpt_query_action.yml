name: Run Python Script On-Demand

# Allows the workflow to be triggered manually
on:
  workflow_dispatch:
    inputs:
        example_input:
          description: 'An example input parameter'
          required: true
          default: 'default_value'

# Specifies the jobs that run as part of the workflow
jobs:
  run-python-script:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x' # Specify the version of Python you want to use

    # Step 3: Install dependencies (if any)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Step 4: creating env file
    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "SPOTIPY_CLIENT_ID=${{ secrets.SPOTIPY_CLIENT_ID }}" >> .env
        echo "SPOTIPY_CLIENT_SECRET=${{ secrets.SPOTIPY_CLIENT_SECRET }}" >> .env
        echo "SPOTIPY_REDIRECT_URI=${{ secrets.SPOTIPY_REDIRECT_URI }}" >> .env
        

    # Step 5: creating token file for google
    - name: Create token.json file
      run: |
        echo "{"\""token"\"": "\""${{ secrets.GOOGLE_TOKEN }}"\"", "\""refresh_token"\"": "\""${{ secrets.GOOGLE_TOKEN_REFRESH }}"\"", "\""token_uri"\"": "\""https://oauth2.googleapis.com/token"\"", "\""client_id"\"": "\""${{ secrets.GOOGLE_CLIENT_ID }}"\"", "\""client_secret"\"": "\""${{ secrets.GOOGLE_CLIENT_SECRET }}"\"", "\""scopes"\"": ["\""https://www.googleapis.com/auth/blogger"\""], "\""universe_domain"\"": "\""googleapis.com"\"", "\""account"\"": "\"""\"", "\""expiry"\"": "\""2024-09-19T19:20:59.082376Z"\""}" >> token.json


    # Step 6: creating cache file for spotify
    - name: Create .cache file
      run: |
        echo "{"\""access_token"\"": "\""${{ secrets.SPOTIFY_ACCESS_TOKEN }}"\"", "\""token_type"\"": "\""Bearer"\"", "\""expires_in"\"": 3600, "\""refresh_token"\"": "\""${{ secrets.SPOTIFY_REFRESH_TOKEN }}"\"", "\""scope"\"": "\""playlist-modify-public playlist-modify-private"\"", "\""expires_at"\"": 1726858965}"" >> .cache





    # Step 6: Run your Python script
    - name: Run Python script
      run: python spotify_rock_tracks.py
